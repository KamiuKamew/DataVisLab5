- 总体而言：
    - 可视化目标是对铁路网中的通行时间进行可视化与信息获取。
    - 图表主要围绕节点之间的通行时间展开，节点可以是车站或者交叉口。
    - 可视化统计目标是人均通行时间。
    - 同时，根据最短路径经过哪些路，可以给各条路设置不同的颜色，以便于观察不同路段之间的通行情况。
    - 同时，路径可以可交互地生成与删除，以便观察铁路网的动态特征，甚至可以顺带讲解路网效应。
    - [x] 为此，需要处理路网信息：

- 左侧边栏（见src/SidePanel.ts/LeftSidePanel）：
    - [x] 增加数据可视化的功能介绍
    - [ ] 增加过滤器面板，可以选择显示哪些数据
    - [x] 增加元素参数面板:
        - [x] 可以通过选择元素来获取详细信息
        - [x] 可以进行修改
- 右侧边栏：增加各种图表（见src/SidePanel.ts/RightSidePanel）。主要包括：
    - [ ] 节点之间的通行时间分布图（折线：密度/时间）
    - [ ] 节点最近邻工具
    - [ ] 附加题：其他图表，想到啥画啥
- 上方工具栏（见src/SidePanel.ts/TopSidePanel）：
    - [x] 可编辑模式切换
        - [x] 力交互展示模式
        - [x] 力交互修改节点和边
        - [x] 实时保存修改结果
- 中央区域（见src/Context.ts）：
    - [ ] 地图模式：显示铁路网的地理分布（见src/MapContext.ts）
        - [x] 地图绘制
        - [x] 地图交互
        - [x] 地图数据获取
        - [ ] 节点可视化编码：大小、颜色、形状等，表示站点的车辆信息、人流信息等等。看看数据集里有啥能可视化的就可视化什么。
        - [ ] 路径可视化编码：宽度、颜色等，表示铁路线的信息。
        - [ ] 鼠标悬浮事件：显示节点信息、路径信息、站点信息等。
        - [ ] 附加题：动态效果。
    - [ ] 交互模式（即拓扑图、力交互图）（见src/Graph）：
        - [ ] 可视化编码
        - [ ] 鼠标悬浮事件：显示节点信息、路径信息、站点信息等。


请使用ts语言、使用D3库制作一个类，用于绘制一个密度曲线图。类接受三个参数，第一个参数svg: d3.select，用于指定绘制地点；第二个参数data: Data，用于提供绘制用的数据，其中，Data的adjacencyTable(): AdjacencyTable 方法返回一个对象：
export type AdjacencyTable = {
  [source_name: string]: {
    [target_name: string]: {
      id: string;
      name: string;

      params?: [number, number, number]; // duration_minute, distance_km, _
    };
  };
};
第三个参数paramId: number，指定使用params?: [number, number, number]中的第几个参数进行密度统计。

这个
{
    "length": number;
    "passBy": number[];
}